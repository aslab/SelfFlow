#include "base.task"
#include <stdlib.h>     /* srand, rand */

class interact_assist_task : public base_task
{
private:

  int count=0;
  int status=0;

public:

  std::string id() override
  {
	std::string name="interact_assist";
	return name;
  }

  void execute() override
  {
	status=10;
  }

  int RequisiteCheck() override
  {
        if(TaskStatus.count("interact")&&TaskStatus.at("interact")==10)return 0;
        else return 1;
  }

  std::vector<std::string> RequisiteLoad() override
  {
        std::vector<std::string> v;
        v.push_back(std::string("find_object"));
        return v;
  }


  double utility() override
  {
	double ut=0.7;
	return ut;
  }

  int tick() override
  {
	count++;
	if(count>5 && TaskStatus.at("interact")!=10)
	{
		status=11;
        }
	return status;  //-1:error, 0: not started, 10:in process, 11:finished
  }

  int tick_rate() override
  {
	return 5;
  }

};


